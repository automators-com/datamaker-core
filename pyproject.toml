[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/docs"]

[tool.hatch.build.targets.wheel]
packages = ["python-datamaker"]

[project]
name = "python-datamaker"
description = "A data generation library."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
authors = [{ name = "Ratul Maharaj", email = "ratulmaharaj@looped.co.za" }]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
]
dependencies = []
dynamic = ["version"]
keywords = [
  "python",
  "testing",
  "data",
  "faker",
  "test-automation",
  "data-generation",
  "synthetic-data",
  "datamaker",
]

[project.urls]
"Bug Tracker" = "https://github.com/automators-com/datamaker-core/issues"
homepage = "https://github.com/automators-com/datamaker-core"
documentation = "https://datamaker.readthedocs.io"

[project.scripts]
datamaker = "datamaker.cli:cli"

[tool.hatch.version]
path = "datamaker/__init__.py"

[tool.hatch.envs.default.scripts]
test = "hatch run test:test"
lint = "hatch run dev:lint"
format = "hatch run dev:format"

[tool.hatch.envs.dev]
post-install-commands = ["pre-commit install"]

[tool.hatch.envs.dev.scripts]
lint = "ruff check ."
format = "black ."

# Test environment
[tool.hatch.envs.test]
dependencies = ["pytest"]

[tool.hatch.envs.test.scripts]
test = "pytest"

# Docs environment
[tool.hatch.envs.docs]
dependencies = ["mkdocs", "mkdocs-material", "mkdocstrings-python"]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve"

# Formatter settings
[tool.black]
line-length = 88
include = "\\.pyi?$"
exclude = "/(\n    \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n | _build\n  | buck-out\n | build\n | venv\n  | dist\n)/\n"

# Linter settings
[tool.ruff]
line-length = 88

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
